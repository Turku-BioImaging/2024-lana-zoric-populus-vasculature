"""
This gives boxplot for area in micron for each sample with in the clone, it takes morphology_data.csv file as input (csv generated by manually annotated -- morphology.py)
"""

import os
import polars as pl
import matplotlib.pyplot as plt
import seaborn as sns

DATA_DIR = os.path.join(os.path.dirname(__file__), "..", "..", "data", "outputs")

# Load the CSV file
csv_file = os.path.join(DATA_DIR, "morphology_data.csv")
df = pl.read_csv(csv_file).to_pandas()

# Plot settings
sns.set(style="whitegrid")

# Get unique clones
clones = df['clone'].unique()

# Plot areas for each sample within each clone
for clone in clones:
    clone_df = df[df['clone'] == clone]
    samples = clone_df['sample'].unique()
    
    plt.figure(figsize=(15, 10))
    sns.boxplot(x="sample", y="area_micron", data=clone_df)
    plt.title(f"Distribution of Object Areas in Clone {clone}")
    plt.xlabel("Sample")
    plt.ylabel("Area (micron^2)")
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.savefig(os.path.join(DATA_DIR, f"area_distribution_{clone}.png"))
    # plt.show()

# Plot perimeters for each sample within each clone
for clone in clones:
    clone_df = df[df['clone'] == clone]
    samples = clone_df['sample'].unique()
    
    plt.figure(figsize=(15, 10))
    sns.boxplot(x="sample", y="perimeter_micron", data=clone_df)
    plt.title(f"Distribution of Object Perimeters in Clone {clone}")
    plt.xlabel("Sample")
    plt.ylabel("Perimeter (microns)")
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.savefig(os.path.join(DATA_DIR, f"perimeter_distribution_{clone}.png"))
    # plt.show()
